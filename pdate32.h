#ifndef __PDATE32_H__
#define __PDATE32_H__

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class COleFont;

/////////////////////////////////////////////////////////////////////////////
// CPdate32 wrapper class

class CPdate32 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CPdate32)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xc0000000, 0xffff, 0x1100, { 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x2 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	BOOL GetEnableCalendarControl();
	void SetEnableCalendarControl(BOOL);
	short GetDateFormat();
	void SetDateFormat(short);
	CString GetSeperator();
	void SetSeperator(LPCTSTR);
	BOOL GetShowCentury();
	void SetShowCentury(BOOL);
	DATE GetValue();
	void SetValue(DATE);
	DATE Get_Value();
	void Set_Value(DATE);
	BOOL GetLeadingZero();
	void SetLeadingZero(BOOL);
	COleFont GetFont();
	void SetFont(LPDISPATCH);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	OLE_COLOR GetForeColor();
	void SetForeColor(OLE_COLOR);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	BOOL GetIgnoreKeyboard();
	void SetIgnoreKeyboard(BOOL);
	short GetAppearance();
	void SetAppearance(short);
	short GetBorderStyle();
	void SetBorderStyle(short);

// Operations
public:
	CString GetDateString();
	void SetMonthLiteral(short index, LPCTSTR literal);
	void SetDayLiteral(short index, LPCTSTR literal);
	void SetAbbrvMonthLiteral(short index, LPCTSTR literal);
	void AboutBox();
};

#endif // __PDATE32_H__
